
AnalogJoystick.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000009f6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000014  00800060  000009f6  00000a8a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000003  00800074  00800074  00000a9e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000a9e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000afc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000138  00000000  00000000  00000b38  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002716  00000000  00000000  00000c70  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b44  00000000  00000000  00003386  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000fa6  00000000  00000000  00003eca  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000328  00000000  00000000  00004e70  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000914  00000000  00000000  00005198  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002734  00000000  00000000  00005aac  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000278  00000000  00000000  000081e0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 31 00 	jmp	0x62	; 0x62 <__ctors_end>
   4:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
   8:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
   c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  10:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  14:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  18:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  1c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  20:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  24:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  28:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  2c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  30:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  34:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  38:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  3c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  40:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  44:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  48:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  4c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  50:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  54:	5b 00       	.word	0x005b	; ????
  56:	5e 00       	.word	0x005e	; ????
  58:	61 00       	.word	0x0061	; ????
  5a:	64 00       	.word	0x0064	; ????
  5c:	67 00       	.word	0x0067	; ????
  5e:	6a 00       	.word	0x006a	; ????
  60:	6d 00       	.word	0x006d	; ????

00000062 <__ctors_end>:
  62:	11 24       	eor	r1, r1
  64:	1f be       	out	0x3f, r1	; 63
  66:	cf e5       	ldi	r28, 0x5F	; 95
  68:	d8 e0       	ldi	r29, 0x08	; 8
  6a:	de bf       	out	0x3e, r29	; 62
  6c:	cd bf       	out	0x3d, r28	; 61

0000006e <__do_copy_data>:
  6e:	10 e0       	ldi	r17, 0x00	; 0
  70:	a0 e6       	ldi	r26, 0x60	; 96
  72:	b0 e0       	ldi	r27, 0x00	; 0
  74:	e6 ef       	ldi	r30, 0xF6	; 246
  76:	f9 e0       	ldi	r31, 0x09	; 9
  78:	02 c0       	rjmp	.+4      	; 0x7e <__do_copy_data+0x10>
  7a:	05 90       	lpm	r0, Z+
  7c:	0d 92       	st	X+, r0
  7e:	a4 37       	cpi	r26, 0x74	; 116
  80:	b1 07       	cpc	r27, r17
  82:	d9 f7       	brne	.-10     	; 0x7a <__do_copy_data+0xc>

00000084 <__do_clear_bss>:
  84:	20 e0       	ldi	r18, 0x00	; 0
  86:	a4 e7       	ldi	r26, 0x74	; 116
  88:	b0 e0       	ldi	r27, 0x00	; 0
  8a:	01 c0       	rjmp	.+2      	; 0x8e <.do_clear_bss_start>

0000008c <.do_clear_bss_loop>:
  8c:	1d 92       	st	X+, r1

0000008e <.do_clear_bss_start>:
  8e:	a7 37       	cpi	r26, 0x77	; 119
  90:	b2 07       	cpc	r27, r18
  92:	e1 f7       	brne	.-8      	; 0x8c <.do_clear_bss_loop>
  94:	0e 94 a6 01 	call	0x34c	; 0x34c <main>
  98:	0c 94 f9 04 	jmp	0x9f2	; 0x9f2 <_exit>

0000009c <__bad_interrupt>:
  9c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a0 <_ZN3Adc7AdcInitE17FrequencyDivision16VoltageReferance>:

Registers IORegister;

void Adc::AdcInit(FrequencyDivision ADCSRAFrequency, VoltageReferance Vref)
{
	ADCSRA |= (1 << ADSC);
  a0:	36 9a       	sbi	0x06, 6	; 6
	switch (ADCSRAFrequency)
  a2:	86 2f       	mov	r24, r22
  a4:	90 e0       	ldi	r25, 0x00	; 0
  a6:	87 30       	cpi	r24, 0x07	; 7
  a8:	91 05       	cpc	r25, r1
  aa:	c8 f4       	brcc	.+50     	; 0xde <_ZN3Adc7AdcInitE17FrequencyDivision16VoltageReferance+0x3e>
  ac:	fc 01       	movw	r30, r24
  ae:	e6 5d       	subi	r30, 0xD6	; 214
  b0:	ff 4f       	sbci	r31, 0xFF	; 255
  b2:	0c 94 09 02 	jmp	0x412	; 0x412 <__tablejump2__>
	{
		case DevidedBy2:
		ADCSRA = (1 << ADEN)|(1 << ADPS0);
  b6:	81 e8       	ldi	r24, 0x81	; 129
  b8:	86 b9       	out	0x06, r24	; 6
		break;
  ba:	11 c0       	rjmp	.+34     	; 0xde <_ZN3Adc7AdcInitE17FrequencyDivision16VoltageReferance+0x3e>
		case DevidedBy4:
		ADCSRA =  (1 << ADEN)|(1 << ADPS1);
  bc:	82 e8       	ldi	r24, 0x82	; 130
  be:	86 b9       	out	0x06, r24	; 6
		break;
  c0:	0e c0       	rjmp	.+28     	; 0xde <_ZN3Adc7AdcInitE17FrequencyDivision16VoltageReferance+0x3e>
		case DevidedBy8:
		ADCSRA =  (1 << ADEN)|(1 << ADPS0)|(1 << ADPS1);
  c2:	83 e8       	ldi	r24, 0x83	; 131
  c4:	86 b9       	out	0x06, r24	; 6
		break;
  c6:	0b c0       	rjmp	.+22     	; 0xde <_ZN3Adc7AdcInitE17FrequencyDivision16VoltageReferance+0x3e>
		case DevidedBy16:
		ADCSRA =  (1 << ADEN)|(1 << ADPS2);
  c8:	84 e8       	ldi	r24, 0x84	; 132
  ca:	86 b9       	out	0x06, r24	; 6
		break;
  cc:	08 c0       	rjmp	.+16     	; 0xde <_ZN3Adc7AdcInitE17FrequencyDivision16VoltageReferance+0x3e>
		case DevidedBy32:
		ADCSRA =  (1 << ADEN)|(1 << ADPS0)|(1 << ADPS2);
  ce:	85 e8       	ldi	r24, 0x85	; 133
  d0:	86 b9       	out	0x06, r24	; 6
		break;
  d2:	05 c0       	rjmp	.+10     	; 0xde <_ZN3Adc7AdcInitE17FrequencyDivision16VoltageReferance+0x3e>
		case DevidedBy64:
		ADCSRA =  (1 << ADEN)|(1 << ADPS1)|(1 << ADPS2);
  d4:	86 e8       	ldi	r24, 0x86	; 134
  d6:	86 b9       	out	0x06, r24	; 6
		break;
  d8:	02 c0       	rjmp	.+4      	; 0xde <_ZN3Adc7AdcInitE17FrequencyDivision16VoltageReferance+0x3e>
		case DevidedBy128:
		ADCSRA =  (1 << ADEN)|(1 << ADPS0)|(1 << ADPS1)|(1 << ADPS2);
  da:	87 e8       	ldi	r24, 0x87	; 135
  dc:	86 b9       	out	0x06, r24	; 6
		break;
	}
	
	if (Vref == AREF)
  de:	41 11       	cpse	r20, r1
  e0:	03 c0       	rjmp	.+6      	; 0xe8 <_ZN3Adc7AdcInitE17FrequencyDivision16VoltageReferance+0x48>
	{
		ADMUX &= ~(1 << REFS0);
  e2:	3e 98       	cbi	0x07, 6	; 7
		ADMUX &= ~(1 << REFS1);
  e4:	3f 98       	cbi	0x07, 7	; 7
  e6:	08 95       	ret
	}
	else if (Vref == AVcc)
  e8:	41 30       	cpi	r20, 0x01	; 1
  ea:	19 f4       	brne	.+6      	; 0xf2 <_ZN3Adc7AdcInitE17FrequencyDivision16VoltageReferance+0x52>
	{
			ADMUX |= (1 << REFS0);
  ec:	3e 9a       	sbi	0x07, 6	; 7
			ADMUX &= ~(1 << REFS1);
  ee:	3f 98       	cbi	0x07, 7	; 7
  f0:	08 95       	ret
	}
	else if (Vref == Internal)
  f2:	42 30       	cpi	r20, 0x02	; 2
  f4:	11 f4       	brne	.+4      	; 0xfa <_ZN3Adc7AdcInitE17FrequencyDivision16VoltageReferance+0x5a>
	{
		ADMUX |= (1 << REFS0);
  f6:	3e 9a       	sbi	0x07, 6	; 7
		ADMUX |= (1 << REFS1);
  f8:	3f 9a       	sbi	0x07, 7	; 7
  fa:	08 95       	ret

000000fc <_ZN3Adc7AdcReadEhh>:
	}
	
}

uint16_t Adc::AdcRead(unsigned char adcPort, uint8_t AdcChannel)
{
  fc:	cf 93       	push	r28
  fe:	c4 2f       	mov	r28, r20
	IORegister.DdrRegisters(adcPort , AdcChannel , 0);
 100:	50 e0       	ldi	r21, 0x00	; 0
 102:	20 e0       	ldi	r18, 0x00	; 0
 104:	30 e0       	ldi	r19, 0x00	; 0
 106:	84 e7       	ldi	r24, 0x74	; 116
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	0e 94 92 00 	call	0x124	; 0x124 <_ZN9Registers12DdrRegistersEhjj>
	ADMUX = ADMUX|(AdcChannel & 0x0f);
 10e:	87 b1       	in	r24, 0x07	; 7
 110:	cf 70       	andi	r28, 0x0F	; 15
 112:	c8 2b       	or	r28, r24
 114:	c7 b9       	out	0x07, r28	; 7
	ADCSRA = (1 << ADSC)|(1 << ADEN);
 116:	80 ec       	ldi	r24, 0xC0	; 192
 118:	86 b9       	out	0x06, r24	; 6
	while (ADIF == 0);
	ADCSRA |= (1 << ADIF);
 11a:	34 9a       	sbi	0x06, 4	; 6
	return ADCW;
 11c:	84 b1       	in	r24, 0x04	; 4
 11e:	95 b1       	in	r25, 0x05	; 5
}
 120:	cf 91       	pop	r28
 122:	08 95       	ret

00000124 <_ZN9Registers12DdrRegistersEhjj>:
	}
}

void Registers::DdrRegisters(unsigned char rName , unsigned int rNum , unsigned int rSituation)
{
	switch (rName)
 124:	62 34       	cpi	r22, 0x42	; 66
 126:	49 f1       	breq	.+82     	; 0x17a <_ZN9Registers12DdrRegistersEhjj+0x56>
 128:	18 f4       	brcc	.+6      	; 0x130 <_ZN9Registers12DdrRegistersEhjj+0xc>
 12a:	61 34       	cpi	r22, 0x41	; 65
 12c:	41 f0       	breq	.+16     	; 0x13e <_ZN9Registers12DdrRegistersEhjj+0x1a>
 12e:	08 95       	ret
 130:	63 34       	cpi	r22, 0x43	; 67
 132:	09 f4       	brne	.+2      	; 0x136 <_ZN9Registers12DdrRegistersEhjj+0x12>
 134:	40 c0       	rjmp	.+128    	; 0x1b6 <_ZN9Registers12DdrRegistersEhjj+0x92>
 136:	64 34       	cpi	r22, 0x44	; 68
 138:	09 f4       	brne	.+2      	; 0x13c <_ZN9Registers12DdrRegistersEhjj+0x18>
 13a:	5a c0       	rjmp	.+180    	; 0x1f0 <_ZN9Registers12DdrRegistersEhjj+0xcc>
 13c:	08 95       	ret
	{
		case 'A' :
			switch (rSituation)
 13e:	21 15       	cp	r18, r1
 140:	31 05       	cpc	r19, r1
 142:	79 f0       	breq	.+30     	; 0x162 <_ZN9Registers12DdrRegistersEhjj+0x3e>
 144:	21 30       	cpi	r18, 0x01	; 1
 146:	31 05       	cpc	r19, r1
 148:	09 f0       	breq	.+2      	; 0x14c <_ZN9Registers12DdrRegistersEhjj+0x28>
 14a:	6e c0       	rjmp	.+220    	; 0x228 <_ZN9Registers12DdrRegistersEhjj+0x104>
			{
				case 1 :
					DDRA |= (1 << rNum);
 14c:	2a b3       	in	r18, 0x1a	; 26
 14e:	81 e0       	ldi	r24, 0x01	; 1
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	02 c0       	rjmp	.+4      	; 0x158 <_ZN9Registers12DdrRegistersEhjj+0x34>
 154:	88 0f       	add	r24, r24
 156:	99 1f       	adc	r25, r25
 158:	4a 95       	dec	r20
 15a:	e2 f7       	brpl	.-8      	; 0x154 <_ZN9Registers12DdrRegistersEhjj+0x30>
 15c:	82 2b       	or	r24, r18
 15e:	8a bb       	out	0x1a, r24	; 26
					break;
 160:	08 95       	ret
				case 0 :
					DDRA &= ~(1 << rNum);
 162:	2a b3       	in	r18, 0x1a	; 26
 164:	81 e0       	ldi	r24, 0x01	; 1
 166:	90 e0       	ldi	r25, 0x00	; 0
 168:	02 c0       	rjmp	.+4      	; 0x16e <_ZN9Registers12DdrRegistersEhjj+0x4a>
 16a:	88 0f       	add	r24, r24
 16c:	99 1f       	adc	r25, r25
 16e:	4a 95       	dec	r20
 170:	e2 f7       	brpl	.-8      	; 0x16a <_ZN9Registers12DdrRegistersEhjj+0x46>
 172:	80 95       	com	r24
 174:	82 23       	and	r24, r18
 176:	8a bb       	out	0x1a, r24	; 26
					break;
 178:	08 95       	ret
			}
			break;
			
		case 'B' :
			switch (rSituation)
 17a:	21 15       	cp	r18, r1
 17c:	31 05       	cpc	r19, r1
 17e:	79 f0       	breq	.+30     	; 0x19e <_ZN9Registers12DdrRegistersEhjj+0x7a>
 180:	21 30       	cpi	r18, 0x01	; 1
 182:	31 05       	cpc	r19, r1
 184:	09 f0       	breq	.+2      	; 0x188 <_ZN9Registers12DdrRegistersEhjj+0x64>
 186:	50 c0       	rjmp	.+160    	; 0x228 <_ZN9Registers12DdrRegistersEhjj+0x104>
			{
				case 1 :
					DDRB |= (1 << rNum);
 188:	27 b3       	in	r18, 0x17	; 23
 18a:	81 e0       	ldi	r24, 0x01	; 1
 18c:	90 e0       	ldi	r25, 0x00	; 0
 18e:	02 c0       	rjmp	.+4      	; 0x194 <_ZN9Registers12DdrRegistersEhjj+0x70>
 190:	88 0f       	add	r24, r24
 192:	99 1f       	adc	r25, r25
 194:	4a 95       	dec	r20
 196:	e2 f7       	brpl	.-8      	; 0x190 <_ZN9Registers12DdrRegistersEhjj+0x6c>
 198:	82 2b       	or	r24, r18
 19a:	87 bb       	out	0x17, r24	; 23
					break;
 19c:	08 95       	ret
				case 0 :
					DDRB &= ~(1 << rNum);
 19e:	27 b3       	in	r18, 0x17	; 23
 1a0:	81 e0       	ldi	r24, 0x01	; 1
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	02 c0       	rjmp	.+4      	; 0x1aa <_ZN9Registers12DdrRegistersEhjj+0x86>
 1a6:	88 0f       	add	r24, r24
 1a8:	99 1f       	adc	r25, r25
 1aa:	4a 95       	dec	r20
 1ac:	e2 f7       	brpl	.-8      	; 0x1a6 <_ZN9Registers12DdrRegistersEhjj+0x82>
 1ae:	80 95       	com	r24
 1b0:	82 23       	and	r24, r18
 1b2:	87 bb       	out	0x17, r24	; 23
					break;
 1b4:	08 95       	ret
			}
			break;
			
		case 'C' :
			switch (rSituation)
 1b6:	21 15       	cp	r18, r1
 1b8:	31 05       	cpc	r19, r1
 1ba:	71 f0       	breq	.+28     	; 0x1d8 <_ZN9Registers12DdrRegistersEhjj+0xb4>
 1bc:	21 30       	cpi	r18, 0x01	; 1
 1be:	31 05       	cpc	r19, r1
 1c0:	99 f5       	brne	.+102    	; 0x228 <_ZN9Registers12DdrRegistersEhjj+0x104>
			{
				case 1 :
					DDRC |= (1 << rNum);
 1c2:	24 b3       	in	r18, 0x14	; 20
 1c4:	81 e0       	ldi	r24, 0x01	; 1
 1c6:	90 e0       	ldi	r25, 0x00	; 0
 1c8:	02 c0       	rjmp	.+4      	; 0x1ce <_ZN9Registers12DdrRegistersEhjj+0xaa>
 1ca:	88 0f       	add	r24, r24
 1cc:	99 1f       	adc	r25, r25
 1ce:	4a 95       	dec	r20
 1d0:	e2 f7       	brpl	.-8      	; 0x1ca <_ZN9Registers12DdrRegistersEhjj+0xa6>
 1d2:	82 2b       	or	r24, r18
 1d4:	84 bb       	out	0x14, r24	; 20
					break;
 1d6:	08 95       	ret
				case 0 :
					DDRC &= ~(1 << rNum);
 1d8:	24 b3       	in	r18, 0x14	; 20
 1da:	81 e0       	ldi	r24, 0x01	; 1
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	02 c0       	rjmp	.+4      	; 0x1e4 <_ZN9Registers12DdrRegistersEhjj+0xc0>
 1e0:	88 0f       	add	r24, r24
 1e2:	99 1f       	adc	r25, r25
 1e4:	4a 95       	dec	r20
 1e6:	e2 f7       	brpl	.-8      	; 0x1e0 <_ZN9Registers12DdrRegistersEhjj+0xbc>
 1e8:	80 95       	com	r24
 1ea:	82 23       	and	r24, r18
 1ec:	84 bb       	out	0x14, r24	; 20
					break;
 1ee:	08 95       	ret
			}
			break;
			
		case 'D' :
			switch (rSituation)
 1f0:	21 15       	cp	r18, r1
 1f2:	31 05       	cpc	r19, r1
 1f4:	71 f0       	breq	.+28     	; 0x212 <_ZN9Registers12DdrRegistersEhjj+0xee>
 1f6:	21 30       	cpi	r18, 0x01	; 1
 1f8:	31 05       	cpc	r19, r1
 1fa:	b1 f4       	brne	.+44     	; 0x228 <_ZN9Registers12DdrRegistersEhjj+0x104>
			{
				case 1 :
					DDRD |= (1 << rNum);
 1fc:	21 b3       	in	r18, 0x11	; 17
 1fe:	81 e0       	ldi	r24, 0x01	; 1
 200:	90 e0       	ldi	r25, 0x00	; 0
 202:	02 c0       	rjmp	.+4      	; 0x208 <_ZN9Registers12DdrRegistersEhjj+0xe4>
 204:	88 0f       	add	r24, r24
 206:	99 1f       	adc	r25, r25
 208:	4a 95       	dec	r20
 20a:	e2 f7       	brpl	.-8      	; 0x204 <_ZN9Registers12DdrRegistersEhjj+0xe0>
 20c:	82 2b       	or	r24, r18
 20e:	81 bb       	out	0x11, r24	; 17
					break;
 210:	08 95       	ret
				case 0 :
					DDRD &= ~(1 << rNum);
 212:	21 b3       	in	r18, 0x11	; 17
 214:	81 e0       	ldi	r24, 0x01	; 1
 216:	90 e0       	ldi	r25, 0x00	; 0
 218:	02 c0       	rjmp	.+4      	; 0x21e <_ZN9Registers12DdrRegistersEhjj+0xfa>
 21a:	88 0f       	add	r24, r24
 21c:	99 1f       	adc	r25, r25
 21e:	4a 95       	dec	r20
 220:	e2 f7       	brpl	.-8      	; 0x21a <_ZN9Registers12DdrRegistersEhjj+0xf6>
 222:	80 95       	com	r24
 224:	82 23       	and	r24, r18
 226:	81 bb       	out	0x11, r24	; 17
 228:	08 95       	ret

0000022a <_ZN13Lcd_4_BitMode10LcdCommandEh>:
	if (row == 0 && pos<16)
	LcdCommand((pos & 0x0F)|0x80);																			/* Command of first row and required position<16 */
	else if (row == 1 && pos<16)
	LcdCommand((pos & 0x0F)|0xC0);																			/* Command of first row and required position<16 */
	LcdString(str);																							/* Call LCD string function */
}
 22a:	88 b3       	in	r24, 0x18	; 24
 22c:	8f 70       	andi	r24, 0x0F	; 15
 22e:	96 2f       	mov	r25, r22
 230:	90 7f       	andi	r25, 0xF0	; 240
 232:	89 2b       	or	r24, r25
 234:	88 bb       	out	0x18, r24	; 24
 236:	c0 98       	cbi	0x18, 0	; 24
 238:	c1 9a       	sbi	0x18, 1	; 24
 23a:	00 00       	nop
 23c:	c1 98       	cbi	0x18, 1	; 24
 23e:	82 e4       	ldi	r24, 0x42	; 66
 240:	8a 95       	dec	r24
 242:	f1 f7       	brne	.-4      	; 0x240 <_ZN13Lcd_4_BitMode10LcdCommandEh+0x16>
 244:	00 c0       	rjmp	.+0      	; 0x246 <_ZN13Lcd_4_BitMode10LcdCommandEh+0x1c>
 246:	88 b3       	in	r24, 0x18	; 24
 248:	8f 70       	andi	r24, 0x0F	; 15
 24a:	90 e1       	ldi	r25, 0x10	; 16
 24c:	69 9f       	mul	r22, r25
 24e:	b0 01       	movw	r22, r0
 250:	11 24       	eor	r1, r1
 252:	68 2b       	or	r22, r24
 254:	68 bb       	out	0x18, r22	; 24
 256:	c1 9a       	sbi	0x18, 1	; 24
 258:	00 00       	nop
 25a:	c1 98       	cbi	0x18, 1	; 24
 25c:	83 ef       	ldi	r24, 0xF3	; 243
 25e:	91 e0       	ldi	r25, 0x01	; 1
 260:	01 97       	sbiw	r24, 0x01	; 1
 262:	f1 f7       	brne	.-4      	; 0x260 <_ZN13Lcd_4_BitMode10LcdCommandEh+0x36>
 264:	00 c0       	rjmp	.+0      	; 0x266 <_ZN13Lcd_4_BitMode10LcdCommandEh+0x3c>
 266:	00 00       	nop
 268:	08 95       	ret

0000026a <_ZN13Lcd_4_BitMode7LcdCharEh>:
 26a:	88 b3       	in	r24, 0x18	; 24
 26c:	8f 70       	andi	r24, 0x0F	; 15
 26e:	96 2f       	mov	r25, r22
 270:	90 7f       	andi	r25, 0xF0	; 240
 272:	89 2b       	or	r24, r25
 274:	88 bb       	out	0x18, r24	; 24
 276:	c0 9a       	sbi	0x18, 0	; 24
 278:	c1 9a       	sbi	0x18, 1	; 24
 27a:	00 00       	nop
 27c:	c1 98       	cbi	0x18, 1	; 24
 27e:	82 e4       	ldi	r24, 0x42	; 66
 280:	8a 95       	dec	r24
 282:	f1 f7       	brne	.-4      	; 0x280 <_ZN13Lcd_4_BitMode7LcdCharEh+0x16>
 284:	00 c0       	rjmp	.+0      	; 0x286 <_ZN13Lcd_4_BitMode7LcdCharEh+0x1c>
 286:	88 b3       	in	r24, 0x18	; 24
 288:	8f 70       	andi	r24, 0x0F	; 15
 28a:	90 e1       	ldi	r25, 0x10	; 16
 28c:	69 9f       	mul	r22, r25
 28e:	b0 01       	movw	r22, r0
 290:	11 24       	eor	r1, r1
 292:	68 2b       	or	r22, r24
 294:	68 bb       	out	0x18, r22	; 24
 296:	c1 9a       	sbi	0x18, 1	; 24
 298:	00 00       	nop
 29a:	c1 98       	cbi	0x18, 1	; 24
 29c:	83 ef       	ldi	r24, 0xF3	; 243
 29e:	91 e0       	ldi	r25, 0x01	; 1
 2a0:	01 97       	sbiw	r24, 0x01	; 1
 2a2:	f1 f7       	brne	.-4      	; 0x2a0 <_ZN13Lcd_4_BitMode7LcdCharEh+0x36>
 2a4:	00 c0       	rjmp	.+0      	; 0x2a6 <_ZN13Lcd_4_BitMode7LcdCharEh+0x3c>
 2a6:	00 00       	nop
 2a8:	08 95       	ret

000002aa <_ZN13Lcd_4_BitMode7LcdInitEv>:
 2aa:	cf 93       	push	r28
 2ac:	df 93       	push	r29
 2ae:	ec 01       	movw	r28, r24
 2b0:	8f ef       	ldi	r24, 0xFF	; 255
 2b2:	87 bb       	out	0x17, r24	; 23
 2b4:	87 e8       	ldi	r24, 0x87	; 135
 2b6:	93 e1       	ldi	r25, 0x13	; 19
 2b8:	01 97       	sbiw	r24, 0x01	; 1
 2ba:	f1 f7       	brne	.-4      	; 0x2b8 <_ZN13Lcd_4_BitMode7LcdInitEv+0xe>
 2bc:	00 c0       	rjmp	.+0      	; 0x2be <_ZN13Lcd_4_BitMode7LcdInitEv+0x14>
 2be:	00 00       	nop
 2c0:	62 e0       	ldi	r22, 0x02	; 2
 2c2:	ce 01       	movw	r24, r28
 2c4:	0e 94 15 01 	call	0x22a	; 0x22a <_ZN13Lcd_4_BitMode10LcdCommandEh>
 2c8:	68 e2       	ldi	r22, 0x28	; 40
 2ca:	ce 01       	movw	r24, r28
 2cc:	0e 94 15 01 	call	0x22a	; 0x22a <_ZN13Lcd_4_BitMode10LcdCommandEh>
 2d0:	6c e0       	ldi	r22, 0x0C	; 12
 2d2:	ce 01       	movw	r24, r28
 2d4:	0e 94 15 01 	call	0x22a	; 0x22a <_ZN13Lcd_4_BitMode10LcdCommandEh>
 2d8:	66 e0       	ldi	r22, 0x06	; 6
 2da:	ce 01       	movw	r24, r28
 2dc:	0e 94 15 01 	call	0x22a	; 0x22a <_ZN13Lcd_4_BitMode10LcdCommandEh>
 2e0:	61 e0       	ldi	r22, 0x01	; 1
 2e2:	ce 01       	movw	r24, r28
 2e4:	0e 94 15 01 	call	0x22a	; 0x22a <_ZN13Lcd_4_BitMode10LcdCommandEh>
 2e8:	83 ef       	ldi	r24, 0xF3	; 243
 2ea:	91 e0       	ldi	r25, 0x01	; 1
 2ec:	01 97       	sbiw	r24, 0x01	; 1
 2ee:	f1 f7       	brne	.-4      	; 0x2ec <_ZN13Lcd_4_BitMode7LcdInitEv+0x42>
 2f0:	00 c0       	rjmp	.+0      	; 0x2f2 <_ZN13Lcd_4_BitMode7LcdInitEv+0x48>
 2f2:	00 00       	nop
 2f4:	df 91       	pop	r29
 2f6:	cf 91       	pop	r28
 2f8:	08 95       	ret

000002fa <_ZN13Lcd_4_BitMode9LcdStringEPc>:
 2fa:	0f 93       	push	r16
 2fc:	1f 93       	push	r17
 2fe:	cf 93       	push	r28
 300:	df 93       	push	r29
 302:	eb 01       	movw	r28, r22
 304:	68 81       	ld	r22, Y
 306:	66 23       	and	r22, r22
 308:	41 f0       	breq	.+16     	; 0x31a <_ZN13Lcd_4_BitMode9LcdStringEPc+0x20>
 30a:	8c 01       	movw	r16, r24
 30c:	21 96       	adiw	r28, 0x01	; 1
 30e:	c8 01       	movw	r24, r16
 310:	0e 94 35 01 	call	0x26a	; 0x26a <_ZN13Lcd_4_BitMode7LcdCharEh>
 314:	69 91       	ld	r22, Y+
 316:	61 11       	cpse	r22, r1
 318:	fa cf       	rjmp	.-12     	; 0x30e <_ZN13Lcd_4_BitMode9LcdStringEPc+0x14>
 31a:	df 91       	pop	r29
 31c:	cf 91       	pop	r28
 31e:	1f 91       	pop	r17
 320:	0f 91       	pop	r16
 322:	08 95       	ret

00000324 <_ZN13Lcd_4_BitMode7LcdGoXyEhh>:

void Lcd_4_BitMode::LcdGoXy (unsigned char row,unsigned char pos)
{
	if (row == 0 && pos<16)
 324:	61 11       	cpse	r22, r1
 326:	08 c0       	rjmp	.+16     	; 0x338 <_ZN13Lcd_4_BitMode7LcdGoXyEhh+0x14>
 328:	40 31       	cpi	r20, 0x10	; 16
 32a:	78 f4       	brcc	.+30     	; 0x34a <_ZN13Lcd_4_BitMode7LcdGoXyEhh+0x26>
	LcdCommand((pos & 0x0F)|0x80);																			/* Command of first row and required position<16 */
 32c:	4f 70       	andi	r20, 0x0F	; 15
 32e:	64 2f       	mov	r22, r20
 330:	60 68       	ori	r22, 0x80	; 128
 332:	0e 94 15 01 	call	0x22a	; 0x22a <_ZN13Lcd_4_BitMode10LcdCommandEh>
 336:	08 95       	ret
	else if (row == 1 && pos<16)
 338:	61 30       	cpi	r22, 0x01	; 1
 33a:	39 f4       	brne	.+14     	; 0x34a <_ZN13Lcd_4_BitMode7LcdGoXyEhh+0x26>
 33c:	40 31       	cpi	r20, 0x10	; 16
 33e:	28 f4       	brcc	.+10     	; 0x34a <_ZN13Lcd_4_BitMode7LcdGoXyEhh+0x26>
	LcdCommand((pos & 0x0F)|0xC0);																			/* Command of first row and required position<16 */
 340:	4f 70       	andi	r20, 0x0F	; 15
 342:	64 2f       	mov	r22, r20
 344:	60 6c       	ori	r22, 0xC0	; 192
 346:	0e 94 15 01 	call	0x22a	; 0x22a <_ZN13Lcd_4_BitMode10LcdCommandEh>
 34a:	08 95       	ret

0000034c <main>:

Adc adc;
Lcd_4_BitMode lcd;

int main(void)
{
 34c:	cf 93       	push	r28
 34e:	df 93       	push	r29
 350:	cd b7       	in	r28, 0x3d	; 61
 352:	de b7       	in	r29, 0x3e	; 62
 354:	64 97       	sbiw	r28, 0x14	; 20
 356:	0f b6       	in	r0, 0x3f	; 63
 358:	f8 94       	cli
 35a:	de bf       	out	0x3e, r29	; 62
 35c:	0f be       	out	0x3f, r0	; 63
 35e:	cd bf       	out	0x3d, r28	; 61
	uint16_t AdcValue;
	char buffer[20];
	
	adc.AdcInit(DevidedBy128, Internal);
 360:	42 e0       	ldi	r20, 0x02	; 2
 362:	66 e0       	ldi	r22, 0x06	; 6
 364:	86 e7       	ldi	r24, 0x76	; 118
 366:	90 e0       	ldi	r25, 0x00	; 0
 368:	0e 94 50 00 	call	0xa0	; 0xa0 <_ZN3Adc7AdcInitE17FrequencyDivision16VoltageReferance>
	lcd.LcdInit();
 36c:	85 e7       	ldi	r24, 0x75	; 117
 36e:	90 e0       	ldi	r25, 0x00	; 0
 370:	0e 94 55 01 	call	0x2aa	; 0x2aa <_ZN13Lcd_4_BitMode7LcdInitEv>
	
	while(1)
	{
		AdcValue = adc.AdcRead('A', 0)/4;
		sprintf(buffer, "X = %d   ", AdcValue);
 374:	0f 2e       	mov	r0, r31
 376:	f0 e6       	ldi	r31, 0x60	; 96
 378:	cf 2e       	mov	r12, r31
 37a:	f0 e0       	ldi	r31, 0x00	; 0
 37c:	df 2e       	mov	r13, r31
 37e:	f0 2d       	mov	r31, r0
 380:	8e 01       	movw	r16, r28
 382:	0f 5f       	subi	r16, 0xFF	; 255
 384:	1f 4f       	sbci	r17, 0xFF	; 255
		lcd.LcdGoXy(0, 0);
		lcd.LcdString(buffer);
		
		AdcValue = adc.AdcRead('A', 1)/4;
		sprintf(buffer, "Y = %d   ", AdcValue);
 386:	0f 2e       	mov	r0, r31
 388:	fa e6       	ldi	r31, 0x6A	; 106
 38a:	ef 2e       	mov	r14, r31
 38c:	f0 e0       	ldi	r31, 0x00	; 0
 38e:	ff 2e       	mov	r15, r31
 390:	f0 2d       	mov	r31, r0
	adc.AdcInit(DevidedBy128, Internal);
	lcd.LcdInit();
	
	while(1)
	{
		AdcValue = adc.AdcRead('A', 0)/4;
 392:	40 e0       	ldi	r20, 0x00	; 0
 394:	61 e4       	ldi	r22, 0x41	; 65
 396:	86 e7       	ldi	r24, 0x76	; 118
 398:	90 e0       	ldi	r25, 0x00	; 0
 39a:	0e 94 7e 00 	call	0xfc	; 0xfc <_ZN3Adc7AdcReadEhh>
		sprintf(buffer, "X = %d   ", AdcValue);
 39e:	96 95       	lsr	r25
 3a0:	87 95       	ror	r24
 3a2:	96 95       	lsr	r25
 3a4:	87 95       	ror	r24
 3a6:	9f 93       	push	r25
 3a8:	8f 93       	push	r24
 3aa:	df 92       	push	r13
 3ac:	cf 92       	push	r12
 3ae:	1f 93       	push	r17
 3b0:	0f 93       	push	r16
 3b2:	0e 94 0f 02 	call	0x41e	; 0x41e <sprintf>
		lcd.LcdGoXy(0, 0);
 3b6:	40 e0       	ldi	r20, 0x00	; 0
 3b8:	60 e0       	ldi	r22, 0x00	; 0
 3ba:	85 e7       	ldi	r24, 0x75	; 117
 3bc:	90 e0       	ldi	r25, 0x00	; 0
 3be:	0e 94 92 01 	call	0x324	; 0x324 <_ZN13Lcd_4_BitMode7LcdGoXyEhh>
		lcd.LcdString(buffer);
 3c2:	b8 01       	movw	r22, r16
 3c4:	85 e7       	ldi	r24, 0x75	; 117
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	0e 94 7d 01 	call	0x2fa	; 0x2fa <_ZN13Lcd_4_BitMode9LcdStringEPc>
		
		AdcValue = adc.AdcRead('A', 1)/4;
 3cc:	41 e0       	ldi	r20, 0x01	; 1
 3ce:	61 e4       	ldi	r22, 0x41	; 65
 3d0:	86 e7       	ldi	r24, 0x76	; 118
 3d2:	90 e0       	ldi	r25, 0x00	; 0
 3d4:	0e 94 7e 00 	call	0xfc	; 0xfc <_ZN3Adc7AdcReadEhh>
		sprintf(buffer, "Y = %d   ", AdcValue);
 3d8:	96 95       	lsr	r25
 3da:	87 95       	ror	r24
 3dc:	96 95       	lsr	r25
 3de:	87 95       	ror	r24
 3e0:	9f 93       	push	r25
 3e2:	8f 93       	push	r24
 3e4:	ff 92       	push	r15
 3e6:	ef 92       	push	r14
 3e8:	1f 93       	push	r17
 3ea:	0f 93       	push	r16
 3ec:	0e 94 0f 02 	call	0x41e	; 0x41e <sprintf>
		lcd.LcdGoXy(1, 0);
 3f0:	40 e0       	ldi	r20, 0x00	; 0
 3f2:	61 e0       	ldi	r22, 0x01	; 1
 3f4:	85 e7       	ldi	r24, 0x75	; 117
 3f6:	90 e0       	ldi	r25, 0x00	; 0
 3f8:	0e 94 92 01 	call	0x324	; 0x324 <_ZN13Lcd_4_BitMode7LcdGoXyEhh>
		lcd.LcdString(buffer);
 3fc:	b8 01       	movw	r22, r16
 3fe:	85 e7       	ldi	r24, 0x75	; 117
 400:	90 e0       	ldi	r25, 0x00	; 0
 402:	0e 94 7d 01 	call	0x2fa	; 0x2fa <_ZN13Lcd_4_BitMode9LcdStringEPc>
 406:	0f b6       	in	r0, 0x3f	; 63
 408:	f8 94       	cli
 40a:	de bf       	out	0x3e, r29	; 62
 40c:	0f be       	out	0x3f, r0	; 63
 40e:	cd bf       	out	0x3d, r28	; 61
 410:	c0 cf       	rjmp	.-128    	; 0x392 <main+0x46>

00000412 <__tablejump2__>:
 412:	ee 0f       	add	r30, r30
 414:	ff 1f       	adc	r31, r31
 416:	05 90       	lpm	r0, Z+
 418:	f4 91       	lpm	r31, Z
 41a:	e0 2d       	mov	r30, r0
 41c:	09 94       	ijmp

0000041e <sprintf>:
 41e:	ae e0       	ldi	r26, 0x0E	; 14
 420:	b0 e0       	ldi	r27, 0x00	; 0
 422:	e5 e1       	ldi	r30, 0x15	; 21
 424:	f2 e0       	ldi	r31, 0x02	; 2
 426:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <__prologue_saves__+0x1c>
 42a:	0d 89       	ldd	r16, Y+21	; 0x15
 42c:	1e 89       	ldd	r17, Y+22	; 0x16
 42e:	86 e0       	ldi	r24, 0x06	; 6
 430:	8c 83       	std	Y+4, r24	; 0x04
 432:	1a 83       	std	Y+2, r17	; 0x02
 434:	09 83       	std	Y+1, r16	; 0x01
 436:	8f ef       	ldi	r24, 0xFF	; 255
 438:	9f e7       	ldi	r25, 0x7F	; 127
 43a:	9e 83       	std	Y+6, r25	; 0x06
 43c:	8d 83       	std	Y+5, r24	; 0x05
 43e:	ae 01       	movw	r20, r28
 440:	47 5e       	subi	r20, 0xE7	; 231
 442:	5f 4f       	sbci	r21, 0xFF	; 255
 444:	6f 89       	ldd	r22, Y+23	; 0x17
 446:	78 8d       	ldd	r23, Y+24	; 0x18
 448:	ce 01       	movw	r24, r28
 44a:	01 96       	adiw	r24, 0x01	; 1
 44c:	0e 94 31 02 	call	0x462	; 0x462 <vfprintf>
 450:	ef 81       	ldd	r30, Y+7	; 0x07
 452:	f8 85       	ldd	r31, Y+8	; 0x08
 454:	e0 0f       	add	r30, r16
 456:	f1 1f       	adc	r31, r17
 458:	10 82       	st	Z, r1
 45a:	2e 96       	adiw	r28, 0x0e	; 14
 45c:	e4 e0       	ldi	r30, 0x04	; 4
 45e:	0c 94 ec 04 	jmp	0x9d8	; 0x9d8 <__epilogue_restores__+0x1c>

00000462 <vfprintf>:
 462:	ab e0       	ldi	r26, 0x0B	; 11
 464:	b0 e0       	ldi	r27, 0x00	; 0
 466:	e7 e3       	ldi	r30, 0x37	; 55
 468:	f2 e0       	ldi	r31, 0x02	; 2
 46a:	0c 94 c2 04 	jmp	0x984	; 0x984 <__prologue_saves__>
 46e:	6c 01       	movw	r12, r24
 470:	7b 01       	movw	r14, r22
 472:	8a 01       	movw	r16, r20
 474:	fc 01       	movw	r30, r24
 476:	17 82       	std	Z+7, r1	; 0x07
 478:	16 82       	std	Z+6, r1	; 0x06
 47a:	83 81       	ldd	r24, Z+3	; 0x03
 47c:	81 ff       	sbrs	r24, 1
 47e:	cc c1       	rjmp	.+920    	; 0x818 <vfprintf+0x3b6>
 480:	ce 01       	movw	r24, r28
 482:	01 96       	adiw	r24, 0x01	; 1
 484:	3c 01       	movw	r6, r24
 486:	f6 01       	movw	r30, r12
 488:	93 81       	ldd	r25, Z+3	; 0x03
 48a:	f7 01       	movw	r30, r14
 48c:	93 fd       	sbrc	r25, 3
 48e:	85 91       	lpm	r24, Z+
 490:	93 ff       	sbrs	r25, 3
 492:	81 91       	ld	r24, Z+
 494:	7f 01       	movw	r14, r30
 496:	88 23       	and	r24, r24
 498:	09 f4       	brne	.+2      	; 0x49c <vfprintf+0x3a>
 49a:	ba c1       	rjmp	.+884    	; 0x810 <vfprintf+0x3ae>
 49c:	85 32       	cpi	r24, 0x25	; 37
 49e:	39 f4       	brne	.+14     	; 0x4ae <vfprintf+0x4c>
 4a0:	93 fd       	sbrc	r25, 3
 4a2:	85 91       	lpm	r24, Z+
 4a4:	93 ff       	sbrs	r25, 3
 4a6:	81 91       	ld	r24, Z+
 4a8:	7f 01       	movw	r14, r30
 4aa:	85 32       	cpi	r24, 0x25	; 37
 4ac:	29 f4       	brne	.+10     	; 0x4b8 <vfprintf+0x56>
 4ae:	b6 01       	movw	r22, r12
 4b0:	90 e0       	ldi	r25, 0x00	; 0
 4b2:	0e 94 28 04 	call	0x850	; 0x850 <fputc>
 4b6:	e7 cf       	rjmp	.-50     	; 0x486 <vfprintf+0x24>
 4b8:	91 2c       	mov	r9, r1
 4ba:	21 2c       	mov	r2, r1
 4bc:	31 2c       	mov	r3, r1
 4be:	ff e1       	ldi	r31, 0x1F	; 31
 4c0:	f3 15       	cp	r31, r3
 4c2:	d8 f0       	brcs	.+54     	; 0x4fa <vfprintf+0x98>
 4c4:	8b 32       	cpi	r24, 0x2B	; 43
 4c6:	79 f0       	breq	.+30     	; 0x4e6 <vfprintf+0x84>
 4c8:	38 f4       	brcc	.+14     	; 0x4d8 <vfprintf+0x76>
 4ca:	80 32       	cpi	r24, 0x20	; 32
 4cc:	79 f0       	breq	.+30     	; 0x4ec <vfprintf+0x8a>
 4ce:	83 32       	cpi	r24, 0x23	; 35
 4d0:	a1 f4       	brne	.+40     	; 0x4fa <vfprintf+0x98>
 4d2:	23 2d       	mov	r18, r3
 4d4:	20 61       	ori	r18, 0x10	; 16
 4d6:	1d c0       	rjmp	.+58     	; 0x512 <vfprintf+0xb0>
 4d8:	8d 32       	cpi	r24, 0x2D	; 45
 4da:	61 f0       	breq	.+24     	; 0x4f4 <vfprintf+0x92>
 4dc:	80 33       	cpi	r24, 0x30	; 48
 4de:	69 f4       	brne	.+26     	; 0x4fa <vfprintf+0x98>
 4e0:	23 2d       	mov	r18, r3
 4e2:	21 60       	ori	r18, 0x01	; 1
 4e4:	16 c0       	rjmp	.+44     	; 0x512 <vfprintf+0xb0>
 4e6:	83 2d       	mov	r24, r3
 4e8:	82 60       	ori	r24, 0x02	; 2
 4ea:	38 2e       	mov	r3, r24
 4ec:	e3 2d       	mov	r30, r3
 4ee:	e4 60       	ori	r30, 0x04	; 4
 4f0:	3e 2e       	mov	r3, r30
 4f2:	2a c0       	rjmp	.+84     	; 0x548 <vfprintf+0xe6>
 4f4:	f3 2d       	mov	r31, r3
 4f6:	f8 60       	ori	r31, 0x08	; 8
 4f8:	1d c0       	rjmp	.+58     	; 0x534 <vfprintf+0xd2>
 4fa:	37 fc       	sbrc	r3, 7
 4fc:	2d c0       	rjmp	.+90     	; 0x558 <vfprintf+0xf6>
 4fe:	20 ed       	ldi	r18, 0xD0	; 208
 500:	28 0f       	add	r18, r24
 502:	2a 30       	cpi	r18, 0x0A	; 10
 504:	40 f0       	brcs	.+16     	; 0x516 <vfprintf+0xb4>
 506:	8e 32       	cpi	r24, 0x2E	; 46
 508:	b9 f4       	brne	.+46     	; 0x538 <vfprintf+0xd6>
 50a:	36 fc       	sbrc	r3, 6
 50c:	81 c1       	rjmp	.+770    	; 0x810 <vfprintf+0x3ae>
 50e:	23 2d       	mov	r18, r3
 510:	20 64       	ori	r18, 0x40	; 64
 512:	32 2e       	mov	r3, r18
 514:	19 c0       	rjmp	.+50     	; 0x548 <vfprintf+0xe6>
 516:	36 fe       	sbrs	r3, 6
 518:	06 c0       	rjmp	.+12     	; 0x526 <vfprintf+0xc4>
 51a:	8a e0       	ldi	r24, 0x0A	; 10
 51c:	98 9e       	mul	r9, r24
 51e:	20 0d       	add	r18, r0
 520:	11 24       	eor	r1, r1
 522:	92 2e       	mov	r9, r18
 524:	11 c0       	rjmp	.+34     	; 0x548 <vfprintf+0xe6>
 526:	ea e0       	ldi	r30, 0x0A	; 10
 528:	2e 9e       	mul	r2, r30
 52a:	20 0d       	add	r18, r0
 52c:	11 24       	eor	r1, r1
 52e:	22 2e       	mov	r2, r18
 530:	f3 2d       	mov	r31, r3
 532:	f0 62       	ori	r31, 0x20	; 32
 534:	3f 2e       	mov	r3, r31
 536:	08 c0       	rjmp	.+16     	; 0x548 <vfprintf+0xe6>
 538:	8c 36       	cpi	r24, 0x6C	; 108
 53a:	21 f4       	brne	.+8      	; 0x544 <vfprintf+0xe2>
 53c:	83 2d       	mov	r24, r3
 53e:	80 68       	ori	r24, 0x80	; 128
 540:	38 2e       	mov	r3, r24
 542:	02 c0       	rjmp	.+4      	; 0x548 <vfprintf+0xe6>
 544:	88 36       	cpi	r24, 0x68	; 104
 546:	41 f4       	brne	.+16     	; 0x558 <vfprintf+0xf6>
 548:	f7 01       	movw	r30, r14
 54a:	93 fd       	sbrc	r25, 3
 54c:	85 91       	lpm	r24, Z+
 54e:	93 ff       	sbrs	r25, 3
 550:	81 91       	ld	r24, Z+
 552:	7f 01       	movw	r14, r30
 554:	81 11       	cpse	r24, r1
 556:	b3 cf       	rjmp	.-154    	; 0x4be <vfprintf+0x5c>
 558:	98 2f       	mov	r25, r24
 55a:	9f 7d       	andi	r25, 0xDF	; 223
 55c:	95 54       	subi	r25, 0x45	; 69
 55e:	93 30       	cpi	r25, 0x03	; 3
 560:	28 f4       	brcc	.+10     	; 0x56c <vfprintf+0x10a>
 562:	0c 5f       	subi	r16, 0xFC	; 252
 564:	1f 4f       	sbci	r17, 0xFF	; 255
 566:	9f e3       	ldi	r25, 0x3F	; 63
 568:	99 83       	std	Y+1, r25	; 0x01
 56a:	0d c0       	rjmp	.+26     	; 0x586 <vfprintf+0x124>
 56c:	83 36       	cpi	r24, 0x63	; 99
 56e:	31 f0       	breq	.+12     	; 0x57c <vfprintf+0x11a>
 570:	83 37       	cpi	r24, 0x73	; 115
 572:	71 f0       	breq	.+28     	; 0x590 <vfprintf+0x12e>
 574:	83 35       	cpi	r24, 0x53	; 83
 576:	09 f0       	breq	.+2      	; 0x57a <vfprintf+0x118>
 578:	59 c0       	rjmp	.+178    	; 0x62c <vfprintf+0x1ca>
 57a:	21 c0       	rjmp	.+66     	; 0x5be <vfprintf+0x15c>
 57c:	f8 01       	movw	r30, r16
 57e:	80 81       	ld	r24, Z
 580:	89 83       	std	Y+1, r24	; 0x01
 582:	0e 5f       	subi	r16, 0xFE	; 254
 584:	1f 4f       	sbci	r17, 0xFF	; 255
 586:	88 24       	eor	r8, r8
 588:	83 94       	inc	r8
 58a:	91 2c       	mov	r9, r1
 58c:	53 01       	movw	r10, r6
 58e:	13 c0       	rjmp	.+38     	; 0x5b6 <vfprintf+0x154>
 590:	28 01       	movw	r4, r16
 592:	f2 e0       	ldi	r31, 0x02	; 2
 594:	4f 0e       	add	r4, r31
 596:	51 1c       	adc	r5, r1
 598:	f8 01       	movw	r30, r16
 59a:	a0 80       	ld	r10, Z
 59c:	b1 80       	ldd	r11, Z+1	; 0x01
 59e:	36 fe       	sbrs	r3, 6
 5a0:	03 c0       	rjmp	.+6      	; 0x5a8 <vfprintf+0x146>
 5a2:	69 2d       	mov	r22, r9
 5a4:	70 e0       	ldi	r23, 0x00	; 0
 5a6:	02 c0       	rjmp	.+4      	; 0x5ac <vfprintf+0x14a>
 5a8:	6f ef       	ldi	r22, 0xFF	; 255
 5aa:	7f ef       	ldi	r23, 0xFF	; 255
 5ac:	c5 01       	movw	r24, r10
 5ae:	0e 94 1d 04 	call	0x83a	; 0x83a <strnlen>
 5b2:	4c 01       	movw	r8, r24
 5b4:	82 01       	movw	r16, r4
 5b6:	f3 2d       	mov	r31, r3
 5b8:	ff 77       	andi	r31, 0x7F	; 127
 5ba:	3f 2e       	mov	r3, r31
 5bc:	16 c0       	rjmp	.+44     	; 0x5ea <vfprintf+0x188>
 5be:	28 01       	movw	r4, r16
 5c0:	22 e0       	ldi	r18, 0x02	; 2
 5c2:	42 0e       	add	r4, r18
 5c4:	51 1c       	adc	r5, r1
 5c6:	f8 01       	movw	r30, r16
 5c8:	a0 80       	ld	r10, Z
 5ca:	b1 80       	ldd	r11, Z+1	; 0x01
 5cc:	36 fe       	sbrs	r3, 6
 5ce:	03 c0       	rjmp	.+6      	; 0x5d6 <vfprintf+0x174>
 5d0:	69 2d       	mov	r22, r9
 5d2:	70 e0       	ldi	r23, 0x00	; 0
 5d4:	02 c0       	rjmp	.+4      	; 0x5da <vfprintf+0x178>
 5d6:	6f ef       	ldi	r22, 0xFF	; 255
 5d8:	7f ef       	ldi	r23, 0xFF	; 255
 5da:	c5 01       	movw	r24, r10
 5dc:	0e 94 12 04 	call	0x824	; 0x824 <strnlen_P>
 5e0:	4c 01       	movw	r8, r24
 5e2:	f3 2d       	mov	r31, r3
 5e4:	f0 68       	ori	r31, 0x80	; 128
 5e6:	3f 2e       	mov	r3, r31
 5e8:	82 01       	movw	r16, r4
 5ea:	33 fc       	sbrc	r3, 3
 5ec:	1b c0       	rjmp	.+54     	; 0x624 <vfprintf+0x1c2>
 5ee:	82 2d       	mov	r24, r2
 5f0:	90 e0       	ldi	r25, 0x00	; 0
 5f2:	88 16       	cp	r8, r24
 5f4:	99 06       	cpc	r9, r25
 5f6:	b0 f4       	brcc	.+44     	; 0x624 <vfprintf+0x1c2>
 5f8:	b6 01       	movw	r22, r12
 5fa:	80 e2       	ldi	r24, 0x20	; 32
 5fc:	90 e0       	ldi	r25, 0x00	; 0
 5fe:	0e 94 28 04 	call	0x850	; 0x850 <fputc>
 602:	2a 94       	dec	r2
 604:	f4 cf       	rjmp	.-24     	; 0x5ee <vfprintf+0x18c>
 606:	f5 01       	movw	r30, r10
 608:	37 fc       	sbrc	r3, 7
 60a:	85 91       	lpm	r24, Z+
 60c:	37 fe       	sbrs	r3, 7
 60e:	81 91       	ld	r24, Z+
 610:	5f 01       	movw	r10, r30
 612:	b6 01       	movw	r22, r12
 614:	90 e0       	ldi	r25, 0x00	; 0
 616:	0e 94 28 04 	call	0x850	; 0x850 <fputc>
 61a:	21 10       	cpse	r2, r1
 61c:	2a 94       	dec	r2
 61e:	21 e0       	ldi	r18, 0x01	; 1
 620:	82 1a       	sub	r8, r18
 622:	91 08       	sbc	r9, r1
 624:	81 14       	cp	r8, r1
 626:	91 04       	cpc	r9, r1
 628:	71 f7       	brne	.-36     	; 0x606 <vfprintf+0x1a4>
 62a:	e8 c0       	rjmp	.+464    	; 0x7fc <vfprintf+0x39a>
 62c:	84 36       	cpi	r24, 0x64	; 100
 62e:	11 f0       	breq	.+4      	; 0x634 <vfprintf+0x1d2>
 630:	89 36       	cpi	r24, 0x69	; 105
 632:	41 f5       	brne	.+80     	; 0x684 <vfprintf+0x222>
 634:	f8 01       	movw	r30, r16
 636:	37 fe       	sbrs	r3, 7
 638:	07 c0       	rjmp	.+14     	; 0x648 <vfprintf+0x1e6>
 63a:	60 81       	ld	r22, Z
 63c:	71 81       	ldd	r23, Z+1	; 0x01
 63e:	82 81       	ldd	r24, Z+2	; 0x02
 640:	93 81       	ldd	r25, Z+3	; 0x03
 642:	0c 5f       	subi	r16, 0xFC	; 252
 644:	1f 4f       	sbci	r17, 0xFF	; 255
 646:	08 c0       	rjmp	.+16     	; 0x658 <vfprintf+0x1f6>
 648:	60 81       	ld	r22, Z
 64a:	71 81       	ldd	r23, Z+1	; 0x01
 64c:	07 2e       	mov	r0, r23
 64e:	00 0c       	add	r0, r0
 650:	88 0b       	sbc	r24, r24
 652:	99 0b       	sbc	r25, r25
 654:	0e 5f       	subi	r16, 0xFE	; 254
 656:	1f 4f       	sbci	r17, 0xFF	; 255
 658:	f3 2d       	mov	r31, r3
 65a:	ff 76       	andi	r31, 0x6F	; 111
 65c:	3f 2e       	mov	r3, r31
 65e:	97 ff       	sbrs	r25, 7
 660:	09 c0       	rjmp	.+18     	; 0x674 <vfprintf+0x212>
 662:	90 95       	com	r25
 664:	80 95       	com	r24
 666:	70 95       	com	r23
 668:	61 95       	neg	r22
 66a:	7f 4f       	sbci	r23, 0xFF	; 255
 66c:	8f 4f       	sbci	r24, 0xFF	; 255
 66e:	9f 4f       	sbci	r25, 0xFF	; 255
 670:	f0 68       	ori	r31, 0x80	; 128
 672:	3f 2e       	mov	r3, r31
 674:	2a e0       	ldi	r18, 0x0A	; 10
 676:	30 e0       	ldi	r19, 0x00	; 0
 678:	a3 01       	movw	r20, r6
 67a:	0e 94 64 04 	call	0x8c8	; 0x8c8 <__ultoa_invert>
 67e:	88 2e       	mov	r8, r24
 680:	86 18       	sub	r8, r6
 682:	45 c0       	rjmp	.+138    	; 0x70e <vfprintf+0x2ac>
 684:	85 37       	cpi	r24, 0x75	; 117
 686:	31 f4       	brne	.+12     	; 0x694 <vfprintf+0x232>
 688:	23 2d       	mov	r18, r3
 68a:	2f 7e       	andi	r18, 0xEF	; 239
 68c:	b2 2e       	mov	r11, r18
 68e:	2a e0       	ldi	r18, 0x0A	; 10
 690:	30 e0       	ldi	r19, 0x00	; 0
 692:	25 c0       	rjmp	.+74     	; 0x6de <vfprintf+0x27c>
 694:	93 2d       	mov	r25, r3
 696:	99 7f       	andi	r25, 0xF9	; 249
 698:	b9 2e       	mov	r11, r25
 69a:	8f 36       	cpi	r24, 0x6F	; 111
 69c:	c1 f0       	breq	.+48     	; 0x6ce <vfprintf+0x26c>
 69e:	18 f4       	brcc	.+6      	; 0x6a6 <vfprintf+0x244>
 6a0:	88 35       	cpi	r24, 0x58	; 88
 6a2:	79 f0       	breq	.+30     	; 0x6c2 <vfprintf+0x260>
 6a4:	b5 c0       	rjmp	.+362    	; 0x810 <vfprintf+0x3ae>
 6a6:	80 37       	cpi	r24, 0x70	; 112
 6a8:	19 f0       	breq	.+6      	; 0x6b0 <vfprintf+0x24e>
 6aa:	88 37       	cpi	r24, 0x78	; 120
 6ac:	21 f0       	breq	.+8      	; 0x6b6 <vfprintf+0x254>
 6ae:	b0 c0       	rjmp	.+352    	; 0x810 <vfprintf+0x3ae>
 6b0:	e9 2f       	mov	r30, r25
 6b2:	e0 61       	ori	r30, 0x10	; 16
 6b4:	be 2e       	mov	r11, r30
 6b6:	b4 fe       	sbrs	r11, 4
 6b8:	0d c0       	rjmp	.+26     	; 0x6d4 <vfprintf+0x272>
 6ba:	fb 2d       	mov	r31, r11
 6bc:	f4 60       	ori	r31, 0x04	; 4
 6be:	bf 2e       	mov	r11, r31
 6c0:	09 c0       	rjmp	.+18     	; 0x6d4 <vfprintf+0x272>
 6c2:	34 fe       	sbrs	r3, 4
 6c4:	0a c0       	rjmp	.+20     	; 0x6da <vfprintf+0x278>
 6c6:	29 2f       	mov	r18, r25
 6c8:	26 60       	ori	r18, 0x06	; 6
 6ca:	b2 2e       	mov	r11, r18
 6cc:	06 c0       	rjmp	.+12     	; 0x6da <vfprintf+0x278>
 6ce:	28 e0       	ldi	r18, 0x08	; 8
 6d0:	30 e0       	ldi	r19, 0x00	; 0
 6d2:	05 c0       	rjmp	.+10     	; 0x6de <vfprintf+0x27c>
 6d4:	20 e1       	ldi	r18, 0x10	; 16
 6d6:	30 e0       	ldi	r19, 0x00	; 0
 6d8:	02 c0       	rjmp	.+4      	; 0x6de <vfprintf+0x27c>
 6da:	20 e1       	ldi	r18, 0x10	; 16
 6dc:	32 e0       	ldi	r19, 0x02	; 2
 6de:	f8 01       	movw	r30, r16
 6e0:	b7 fe       	sbrs	r11, 7
 6e2:	07 c0       	rjmp	.+14     	; 0x6f2 <vfprintf+0x290>
 6e4:	60 81       	ld	r22, Z
 6e6:	71 81       	ldd	r23, Z+1	; 0x01
 6e8:	82 81       	ldd	r24, Z+2	; 0x02
 6ea:	93 81       	ldd	r25, Z+3	; 0x03
 6ec:	0c 5f       	subi	r16, 0xFC	; 252
 6ee:	1f 4f       	sbci	r17, 0xFF	; 255
 6f0:	06 c0       	rjmp	.+12     	; 0x6fe <vfprintf+0x29c>
 6f2:	60 81       	ld	r22, Z
 6f4:	71 81       	ldd	r23, Z+1	; 0x01
 6f6:	80 e0       	ldi	r24, 0x00	; 0
 6f8:	90 e0       	ldi	r25, 0x00	; 0
 6fa:	0e 5f       	subi	r16, 0xFE	; 254
 6fc:	1f 4f       	sbci	r17, 0xFF	; 255
 6fe:	a3 01       	movw	r20, r6
 700:	0e 94 64 04 	call	0x8c8	; 0x8c8 <__ultoa_invert>
 704:	88 2e       	mov	r8, r24
 706:	86 18       	sub	r8, r6
 708:	fb 2d       	mov	r31, r11
 70a:	ff 77       	andi	r31, 0x7F	; 127
 70c:	3f 2e       	mov	r3, r31
 70e:	36 fe       	sbrs	r3, 6
 710:	0d c0       	rjmp	.+26     	; 0x72c <vfprintf+0x2ca>
 712:	23 2d       	mov	r18, r3
 714:	2e 7f       	andi	r18, 0xFE	; 254
 716:	a2 2e       	mov	r10, r18
 718:	89 14       	cp	r8, r9
 71a:	58 f4       	brcc	.+22     	; 0x732 <vfprintf+0x2d0>
 71c:	34 fe       	sbrs	r3, 4
 71e:	0b c0       	rjmp	.+22     	; 0x736 <vfprintf+0x2d4>
 720:	32 fc       	sbrc	r3, 2
 722:	09 c0       	rjmp	.+18     	; 0x736 <vfprintf+0x2d4>
 724:	83 2d       	mov	r24, r3
 726:	8e 7e       	andi	r24, 0xEE	; 238
 728:	a8 2e       	mov	r10, r24
 72a:	05 c0       	rjmp	.+10     	; 0x736 <vfprintf+0x2d4>
 72c:	b8 2c       	mov	r11, r8
 72e:	a3 2c       	mov	r10, r3
 730:	03 c0       	rjmp	.+6      	; 0x738 <vfprintf+0x2d6>
 732:	b8 2c       	mov	r11, r8
 734:	01 c0       	rjmp	.+2      	; 0x738 <vfprintf+0x2d6>
 736:	b9 2c       	mov	r11, r9
 738:	a4 fe       	sbrs	r10, 4
 73a:	0f c0       	rjmp	.+30     	; 0x75a <vfprintf+0x2f8>
 73c:	fe 01       	movw	r30, r28
 73e:	e8 0d       	add	r30, r8
 740:	f1 1d       	adc	r31, r1
 742:	80 81       	ld	r24, Z
 744:	80 33       	cpi	r24, 0x30	; 48
 746:	21 f4       	brne	.+8      	; 0x750 <vfprintf+0x2ee>
 748:	9a 2d       	mov	r25, r10
 74a:	99 7e       	andi	r25, 0xE9	; 233
 74c:	a9 2e       	mov	r10, r25
 74e:	09 c0       	rjmp	.+18     	; 0x762 <vfprintf+0x300>
 750:	a2 fe       	sbrs	r10, 2
 752:	06 c0       	rjmp	.+12     	; 0x760 <vfprintf+0x2fe>
 754:	b3 94       	inc	r11
 756:	b3 94       	inc	r11
 758:	04 c0       	rjmp	.+8      	; 0x762 <vfprintf+0x300>
 75a:	8a 2d       	mov	r24, r10
 75c:	86 78       	andi	r24, 0x86	; 134
 75e:	09 f0       	breq	.+2      	; 0x762 <vfprintf+0x300>
 760:	b3 94       	inc	r11
 762:	a3 fc       	sbrc	r10, 3
 764:	11 c0       	rjmp	.+34     	; 0x788 <vfprintf+0x326>
 766:	a0 fe       	sbrs	r10, 0
 768:	06 c0       	rjmp	.+12     	; 0x776 <vfprintf+0x314>
 76a:	b2 14       	cp	r11, r2
 76c:	88 f4       	brcc	.+34     	; 0x790 <vfprintf+0x32e>
 76e:	28 0c       	add	r2, r8
 770:	92 2c       	mov	r9, r2
 772:	9b 18       	sub	r9, r11
 774:	0e c0       	rjmp	.+28     	; 0x792 <vfprintf+0x330>
 776:	b2 14       	cp	r11, r2
 778:	60 f4       	brcc	.+24     	; 0x792 <vfprintf+0x330>
 77a:	b6 01       	movw	r22, r12
 77c:	80 e2       	ldi	r24, 0x20	; 32
 77e:	90 e0       	ldi	r25, 0x00	; 0
 780:	0e 94 28 04 	call	0x850	; 0x850 <fputc>
 784:	b3 94       	inc	r11
 786:	f7 cf       	rjmp	.-18     	; 0x776 <vfprintf+0x314>
 788:	b2 14       	cp	r11, r2
 78a:	18 f4       	brcc	.+6      	; 0x792 <vfprintf+0x330>
 78c:	2b 18       	sub	r2, r11
 78e:	02 c0       	rjmp	.+4      	; 0x794 <vfprintf+0x332>
 790:	98 2c       	mov	r9, r8
 792:	21 2c       	mov	r2, r1
 794:	a4 fe       	sbrs	r10, 4
 796:	10 c0       	rjmp	.+32     	; 0x7b8 <vfprintf+0x356>
 798:	b6 01       	movw	r22, r12
 79a:	80 e3       	ldi	r24, 0x30	; 48
 79c:	90 e0       	ldi	r25, 0x00	; 0
 79e:	0e 94 28 04 	call	0x850	; 0x850 <fputc>
 7a2:	a2 fe       	sbrs	r10, 2
 7a4:	17 c0       	rjmp	.+46     	; 0x7d4 <vfprintf+0x372>
 7a6:	a1 fc       	sbrc	r10, 1
 7a8:	03 c0       	rjmp	.+6      	; 0x7b0 <vfprintf+0x34e>
 7aa:	88 e7       	ldi	r24, 0x78	; 120
 7ac:	90 e0       	ldi	r25, 0x00	; 0
 7ae:	02 c0       	rjmp	.+4      	; 0x7b4 <vfprintf+0x352>
 7b0:	88 e5       	ldi	r24, 0x58	; 88
 7b2:	90 e0       	ldi	r25, 0x00	; 0
 7b4:	b6 01       	movw	r22, r12
 7b6:	0c c0       	rjmp	.+24     	; 0x7d0 <vfprintf+0x36e>
 7b8:	8a 2d       	mov	r24, r10
 7ba:	86 78       	andi	r24, 0x86	; 134
 7bc:	59 f0       	breq	.+22     	; 0x7d4 <vfprintf+0x372>
 7be:	a1 fe       	sbrs	r10, 1
 7c0:	02 c0       	rjmp	.+4      	; 0x7c6 <vfprintf+0x364>
 7c2:	8b e2       	ldi	r24, 0x2B	; 43
 7c4:	01 c0       	rjmp	.+2      	; 0x7c8 <vfprintf+0x366>
 7c6:	80 e2       	ldi	r24, 0x20	; 32
 7c8:	a7 fc       	sbrc	r10, 7
 7ca:	8d e2       	ldi	r24, 0x2D	; 45
 7cc:	b6 01       	movw	r22, r12
 7ce:	90 e0       	ldi	r25, 0x00	; 0
 7d0:	0e 94 28 04 	call	0x850	; 0x850 <fputc>
 7d4:	89 14       	cp	r8, r9
 7d6:	38 f4       	brcc	.+14     	; 0x7e6 <vfprintf+0x384>
 7d8:	b6 01       	movw	r22, r12
 7da:	80 e3       	ldi	r24, 0x30	; 48
 7dc:	90 e0       	ldi	r25, 0x00	; 0
 7de:	0e 94 28 04 	call	0x850	; 0x850 <fputc>
 7e2:	9a 94       	dec	r9
 7e4:	f7 cf       	rjmp	.-18     	; 0x7d4 <vfprintf+0x372>
 7e6:	8a 94       	dec	r8
 7e8:	f3 01       	movw	r30, r6
 7ea:	e8 0d       	add	r30, r8
 7ec:	f1 1d       	adc	r31, r1
 7ee:	80 81       	ld	r24, Z
 7f0:	b6 01       	movw	r22, r12
 7f2:	90 e0       	ldi	r25, 0x00	; 0
 7f4:	0e 94 28 04 	call	0x850	; 0x850 <fputc>
 7f8:	81 10       	cpse	r8, r1
 7fa:	f5 cf       	rjmp	.-22     	; 0x7e6 <vfprintf+0x384>
 7fc:	22 20       	and	r2, r2
 7fe:	09 f4       	brne	.+2      	; 0x802 <vfprintf+0x3a0>
 800:	42 ce       	rjmp	.-892    	; 0x486 <vfprintf+0x24>
 802:	b6 01       	movw	r22, r12
 804:	80 e2       	ldi	r24, 0x20	; 32
 806:	90 e0       	ldi	r25, 0x00	; 0
 808:	0e 94 28 04 	call	0x850	; 0x850 <fputc>
 80c:	2a 94       	dec	r2
 80e:	f6 cf       	rjmp	.-20     	; 0x7fc <vfprintf+0x39a>
 810:	f6 01       	movw	r30, r12
 812:	86 81       	ldd	r24, Z+6	; 0x06
 814:	97 81       	ldd	r25, Z+7	; 0x07
 816:	02 c0       	rjmp	.+4      	; 0x81c <vfprintf+0x3ba>
 818:	8f ef       	ldi	r24, 0xFF	; 255
 81a:	9f ef       	ldi	r25, 0xFF	; 255
 81c:	2b 96       	adiw	r28, 0x0b	; 11
 81e:	e2 e1       	ldi	r30, 0x12	; 18
 820:	0c 94 de 04 	jmp	0x9bc	; 0x9bc <__epilogue_restores__>

00000824 <strnlen_P>:
 824:	fc 01       	movw	r30, r24
 826:	05 90       	lpm	r0, Z+
 828:	61 50       	subi	r22, 0x01	; 1
 82a:	70 40       	sbci	r23, 0x00	; 0
 82c:	01 10       	cpse	r0, r1
 82e:	d8 f7       	brcc	.-10     	; 0x826 <strnlen_P+0x2>
 830:	80 95       	com	r24
 832:	90 95       	com	r25
 834:	8e 0f       	add	r24, r30
 836:	9f 1f       	adc	r25, r31
 838:	08 95       	ret

0000083a <strnlen>:
 83a:	fc 01       	movw	r30, r24
 83c:	61 50       	subi	r22, 0x01	; 1
 83e:	70 40       	sbci	r23, 0x00	; 0
 840:	01 90       	ld	r0, Z+
 842:	01 10       	cpse	r0, r1
 844:	d8 f7       	brcc	.-10     	; 0x83c <strnlen+0x2>
 846:	80 95       	com	r24
 848:	90 95       	com	r25
 84a:	8e 0f       	add	r24, r30
 84c:	9f 1f       	adc	r25, r31
 84e:	08 95       	ret

00000850 <fputc>:
 850:	0f 93       	push	r16
 852:	1f 93       	push	r17
 854:	cf 93       	push	r28
 856:	df 93       	push	r29
 858:	fb 01       	movw	r30, r22
 85a:	23 81       	ldd	r18, Z+3	; 0x03
 85c:	21 fd       	sbrc	r18, 1
 85e:	03 c0       	rjmp	.+6      	; 0x866 <__stack+0x7>
 860:	8f ef       	ldi	r24, 0xFF	; 255
 862:	9f ef       	ldi	r25, 0xFF	; 255
 864:	2c c0       	rjmp	.+88     	; 0x8be <__stack+0x5f>
 866:	22 ff       	sbrs	r18, 2
 868:	16 c0       	rjmp	.+44     	; 0x896 <__stack+0x37>
 86a:	46 81       	ldd	r20, Z+6	; 0x06
 86c:	57 81       	ldd	r21, Z+7	; 0x07
 86e:	24 81       	ldd	r18, Z+4	; 0x04
 870:	35 81       	ldd	r19, Z+5	; 0x05
 872:	42 17       	cp	r20, r18
 874:	53 07       	cpc	r21, r19
 876:	44 f4       	brge	.+16     	; 0x888 <__stack+0x29>
 878:	a0 81       	ld	r26, Z
 87a:	b1 81       	ldd	r27, Z+1	; 0x01
 87c:	9d 01       	movw	r18, r26
 87e:	2f 5f       	subi	r18, 0xFF	; 255
 880:	3f 4f       	sbci	r19, 0xFF	; 255
 882:	31 83       	std	Z+1, r19	; 0x01
 884:	20 83       	st	Z, r18
 886:	8c 93       	st	X, r24
 888:	26 81       	ldd	r18, Z+6	; 0x06
 88a:	37 81       	ldd	r19, Z+7	; 0x07
 88c:	2f 5f       	subi	r18, 0xFF	; 255
 88e:	3f 4f       	sbci	r19, 0xFF	; 255
 890:	37 83       	std	Z+7, r19	; 0x07
 892:	26 83       	std	Z+6, r18	; 0x06
 894:	14 c0       	rjmp	.+40     	; 0x8be <__stack+0x5f>
 896:	8b 01       	movw	r16, r22
 898:	ec 01       	movw	r28, r24
 89a:	fb 01       	movw	r30, r22
 89c:	00 84       	ldd	r0, Z+8	; 0x08
 89e:	f1 85       	ldd	r31, Z+9	; 0x09
 8a0:	e0 2d       	mov	r30, r0
 8a2:	09 95       	icall
 8a4:	89 2b       	or	r24, r25
 8a6:	e1 f6       	brne	.-72     	; 0x860 <__stack+0x1>
 8a8:	d8 01       	movw	r26, r16
 8aa:	16 96       	adiw	r26, 0x06	; 6
 8ac:	8d 91       	ld	r24, X+
 8ae:	9c 91       	ld	r25, X
 8b0:	17 97       	sbiw	r26, 0x07	; 7
 8b2:	01 96       	adiw	r24, 0x01	; 1
 8b4:	17 96       	adiw	r26, 0x07	; 7
 8b6:	9c 93       	st	X, r25
 8b8:	8e 93       	st	-X, r24
 8ba:	16 97       	sbiw	r26, 0x06	; 6
 8bc:	ce 01       	movw	r24, r28
 8be:	df 91       	pop	r29
 8c0:	cf 91       	pop	r28
 8c2:	1f 91       	pop	r17
 8c4:	0f 91       	pop	r16
 8c6:	08 95       	ret

000008c8 <__ultoa_invert>:
 8c8:	fa 01       	movw	r30, r20
 8ca:	aa 27       	eor	r26, r26
 8cc:	28 30       	cpi	r18, 0x08	; 8
 8ce:	51 f1       	breq	.+84     	; 0x924 <__ultoa_invert+0x5c>
 8d0:	20 31       	cpi	r18, 0x10	; 16
 8d2:	81 f1       	breq	.+96     	; 0x934 <__ultoa_invert+0x6c>
 8d4:	e8 94       	clt
 8d6:	6f 93       	push	r22
 8d8:	6e 7f       	andi	r22, 0xFE	; 254
 8da:	6e 5f       	subi	r22, 0xFE	; 254
 8dc:	7f 4f       	sbci	r23, 0xFF	; 255
 8de:	8f 4f       	sbci	r24, 0xFF	; 255
 8e0:	9f 4f       	sbci	r25, 0xFF	; 255
 8e2:	af 4f       	sbci	r26, 0xFF	; 255
 8e4:	b1 e0       	ldi	r27, 0x01	; 1
 8e6:	3e d0       	rcall	.+124    	; 0x964 <__ultoa_invert+0x9c>
 8e8:	b4 e0       	ldi	r27, 0x04	; 4
 8ea:	3c d0       	rcall	.+120    	; 0x964 <__ultoa_invert+0x9c>
 8ec:	67 0f       	add	r22, r23
 8ee:	78 1f       	adc	r23, r24
 8f0:	89 1f       	adc	r24, r25
 8f2:	9a 1f       	adc	r25, r26
 8f4:	a1 1d       	adc	r26, r1
 8f6:	68 0f       	add	r22, r24
 8f8:	79 1f       	adc	r23, r25
 8fa:	8a 1f       	adc	r24, r26
 8fc:	91 1d       	adc	r25, r1
 8fe:	a1 1d       	adc	r26, r1
 900:	6a 0f       	add	r22, r26
 902:	71 1d       	adc	r23, r1
 904:	81 1d       	adc	r24, r1
 906:	91 1d       	adc	r25, r1
 908:	a1 1d       	adc	r26, r1
 90a:	20 d0       	rcall	.+64     	; 0x94c <__ultoa_invert+0x84>
 90c:	09 f4       	brne	.+2      	; 0x910 <__ultoa_invert+0x48>
 90e:	68 94       	set
 910:	3f 91       	pop	r19
 912:	2a e0       	ldi	r18, 0x0A	; 10
 914:	26 9f       	mul	r18, r22
 916:	11 24       	eor	r1, r1
 918:	30 19       	sub	r19, r0
 91a:	30 5d       	subi	r19, 0xD0	; 208
 91c:	31 93       	st	Z+, r19
 91e:	de f6       	brtc	.-74     	; 0x8d6 <__ultoa_invert+0xe>
 920:	cf 01       	movw	r24, r30
 922:	08 95       	ret
 924:	46 2f       	mov	r20, r22
 926:	47 70       	andi	r20, 0x07	; 7
 928:	40 5d       	subi	r20, 0xD0	; 208
 92a:	41 93       	st	Z+, r20
 92c:	b3 e0       	ldi	r27, 0x03	; 3
 92e:	0f d0       	rcall	.+30     	; 0x94e <__ultoa_invert+0x86>
 930:	c9 f7       	brne	.-14     	; 0x924 <__ultoa_invert+0x5c>
 932:	f6 cf       	rjmp	.-20     	; 0x920 <__ultoa_invert+0x58>
 934:	46 2f       	mov	r20, r22
 936:	4f 70       	andi	r20, 0x0F	; 15
 938:	40 5d       	subi	r20, 0xD0	; 208
 93a:	4a 33       	cpi	r20, 0x3A	; 58
 93c:	18 f0       	brcs	.+6      	; 0x944 <__ultoa_invert+0x7c>
 93e:	49 5d       	subi	r20, 0xD9	; 217
 940:	31 fd       	sbrc	r19, 1
 942:	40 52       	subi	r20, 0x20	; 32
 944:	41 93       	st	Z+, r20
 946:	02 d0       	rcall	.+4      	; 0x94c <__ultoa_invert+0x84>
 948:	a9 f7       	brne	.-22     	; 0x934 <__ultoa_invert+0x6c>
 94a:	ea cf       	rjmp	.-44     	; 0x920 <__ultoa_invert+0x58>
 94c:	b4 e0       	ldi	r27, 0x04	; 4
 94e:	a6 95       	lsr	r26
 950:	97 95       	ror	r25
 952:	87 95       	ror	r24
 954:	77 95       	ror	r23
 956:	67 95       	ror	r22
 958:	ba 95       	dec	r27
 95a:	c9 f7       	brne	.-14     	; 0x94e <__ultoa_invert+0x86>
 95c:	00 97       	sbiw	r24, 0x00	; 0
 95e:	61 05       	cpc	r22, r1
 960:	71 05       	cpc	r23, r1
 962:	08 95       	ret
 964:	9b 01       	movw	r18, r22
 966:	ac 01       	movw	r20, r24
 968:	0a 2e       	mov	r0, r26
 96a:	06 94       	lsr	r0
 96c:	57 95       	ror	r21
 96e:	47 95       	ror	r20
 970:	37 95       	ror	r19
 972:	27 95       	ror	r18
 974:	ba 95       	dec	r27
 976:	c9 f7       	brne	.-14     	; 0x96a <__ultoa_invert+0xa2>
 978:	62 0f       	add	r22, r18
 97a:	73 1f       	adc	r23, r19
 97c:	84 1f       	adc	r24, r20
 97e:	95 1f       	adc	r25, r21
 980:	a0 1d       	adc	r26, r0
 982:	08 95       	ret

00000984 <__prologue_saves__>:
 984:	2f 92       	push	r2
 986:	3f 92       	push	r3
 988:	4f 92       	push	r4
 98a:	5f 92       	push	r5
 98c:	6f 92       	push	r6
 98e:	7f 92       	push	r7
 990:	8f 92       	push	r8
 992:	9f 92       	push	r9
 994:	af 92       	push	r10
 996:	bf 92       	push	r11
 998:	cf 92       	push	r12
 99a:	df 92       	push	r13
 99c:	ef 92       	push	r14
 99e:	ff 92       	push	r15
 9a0:	0f 93       	push	r16
 9a2:	1f 93       	push	r17
 9a4:	cf 93       	push	r28
 9a6:	df 93       	push	r29
 9a8:	cd b7       	in	r28, 0x3d	; 61
 9aa:	de b7       	in	r29, 0x3e	; 62
 9ac:	ca 1b       	sub	r28, r26
 9ae:	db 0b       	sbc	r29, r27
 9b0:	0f b6       	in	r0, 0x3f	; 63
 9b2:	f8 94       	cli
 9b4:	de bf       	out	0x3e, r29	; 62
 9b6:	0f be       	out	0x3f, r0	; 63
 9b8:	cd bf       	out	0x3d, r28	; 61
 9ba:	09 94       	ijmp

000009bc <__epilogue_restores__>:
 9bc:	2a 88       	ldd	r2, Y+18	; 0x12
 9be:	39 88       	ldd	r3, Y+17	; 0x11
 9c0:	48 88       	ldd	r4, Y+16	; 0x10
 9c2:	5f 84       	ldd	r5, Y+15	; 0x0f
 9c4:	6e 84       	ldd	r6, Y+14	; 0x0e
 9c6:	7d 84       	ldd	r7, Y+13	; 0x0d
 9c8:	8c 84       	ldd	r8, Y+12	; 0x0c
 9ca:	9b 84       	ldd	r9, Y+11	; 0x0b
 9cc:	aa 84       	ldd	r10, Y+10	; 0x0a
 9ce:	b9 84       	ldd	r11, Y+9	; 0x09
 9d0:	c8 84       	ldd	r12, Y+8	; 0x08
 9d2:	df 80       	ldd	r13, Y+7	; 0x07
 9d4:	ee 80       	ldd	r14, Y+6	; 0x06
 9d6:	fd 80       	ldd	r15, Y+5	; 0x05
 9d8:	0c 81       	ldd	r16, Y+4	; 0x04
 9da:	1b 81       	ldd	r17, Y+3	; 0x03
 9dc:	aa 81       	ldd	r26, Y+2	; 0x02
 9de:	b9 81       	ldd	r27, Y+1	; 0x01
 9e0:	ce 0f       	add	r28, r30
 9e2:	d1 1d       	adc	r29, r1
 9e4:	0f b6       	in	r0, 0x3f	; 63
 9e6:	f8 94       	cli
 9e8:	de bf       	out	0x3e, r29	; 62
 9ea:	0f be       	out	0x3f, r0	; 63
 9ec:	cd bf       	out	0x3d, r28	; 61
 9ee:	ed 01       	movw	r28, r26
 9f0:	08 95       	ret

000009f2 <_exit>:
 9f2:	f8 94       	cli

000009f4 <__stop_program>:
 9f4:	ff cf       	rjmp	.-2      	; 0x9f4 <__stop_program>
